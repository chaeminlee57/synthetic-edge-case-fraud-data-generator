version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: fraud_gen_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fraud_gen_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fraud_gen_pass}
      POSTGRES_DB: ${POSTGRES_DB:-fraud_generator}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fraud_gen_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - fraud_gen_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: fraud_gen_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@fraudgen.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - fraud_gen_network

mlflow:
    build:
      context: .
      dockerfile: mlflow.dockerfile
    container_name: fraud_gen_mlflow
    ports:
      - "${MLFLOW_PORT:-5000}:5000"
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
    depends_on:
      - postgres
    environment:
      MLFLOW_TRACKING_URI: postgresql://${POSTGRES_USER:-fraud_gen_user}:${POSTGRES_PASSWORD:-fraud_gen_pass}@postgres:5432/mlflow
    restart: unless-stopped
    networks:
      - fraud_gen_network

volumes:
  mlflow_artifacts:
    driver: local

networks:
  fraud_gen_network:
    driver: bridge
